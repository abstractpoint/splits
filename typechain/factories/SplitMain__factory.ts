/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type { SplitMain, SplitMainInterface } from '../SplitMain'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'wethAddress_',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'splitAddress',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'splitHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'address[]',
        name: 'accounts',
        type: 'address[]',
      },
      {
        indexed: false,
        internalType: 'uint32[]',
        name: 'percentAllocations',
        type: 'uint32[]',
      },
    ],
    name: 'CreateSplit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'splitAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'DistributeSplit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'success',
        type: 'bool',
      },
    ],
    name: 'TransferETH',
    type: 'event',
  },
  {
    inputs: [],
    name: 'PERCENTAGE_SCALE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'balances',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'claimBalance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'accounts',
        type: 'address[]',
      },
      {
        internalType: 'uint32[]',
        name: 'percentAllocations',
        type: 'uint32[]',
      },
    ],
    name: 'createSplit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'split',
        type: 'address',
      },
      {
        internalType: 'address[]',
        name: 'accounts',
        type: 'address[]',
      },
      {
        internalType: 'uint32[]',
        name: 'percentAllocations',
        type: 'uint32[]',
      },
    ],
    name: 'distributeSplitBalance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'split',
        type: 'address',
      },
    ],
    name: 'receiveSplitFunds',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'scaledPercent',
        type: 'uint256',
      },
    ],
    name: 'scaleAmountByPercentage',
    outputs: [
      {
        internalType: 'uint256',
        name: 'scaledAmount',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'splitHashes',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
]

const _bytecode =
  '0x60806040523480156200001157600080fd5b506040516200172938038062001729833981810160405281019062000037919062000095565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200010f565b6000815190506200008f81620000f5565b92915050565b600060208284031215620000a857600080fd5b6000620000b8848285016200007e565b91505092915050565b6000620000ce82620000d5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200010081620000c1565b81146200010c57600080fd5b50565b61160a806200011f6000396000f3fe60806040526004361061007b5760003560e01c80638ffb5c971161004e5780638ffb5c971461014e578063af0b2f1d1461018b578063b633e4cd146101a7578063e40dcfe3146101d05761007b565b806327e235e3146100805780633f26479e146100bd5780635dcc9ec7146100e85780638a5891a014610125575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610be8565b6101f9565b6040516100b49190611215565b60405180910390f35b3480156100c957600080fd5b506100d2610211565b6040516100df9190611215565b60405180910390f35b3480156100f457600080fd5b5061010f600480360381019061010a9190610be8565b610218565b60405161011c919061119a565b60405180910390f35b34801561013157600080fd5b5061014c60048036038101906101479190610c11565b610230565b005b34801561015a57600080fd5b5061017560048036038101906101709190610d38565b610582565b6040516101829190611215565b60405180910390f35b6101a560048036038101906101a09190610be8565b6105b2565b005b3480156101b357600080fd5b506101ce60048036038101906101c99190610be8565b61060b565b005b3480156101dc57600080fd5b506101f760048036038101906101f29190610c9a565b610727565b005b60016020528060005260406000206000915090505481565b620f424081565b60026020528060005260406000206000915090505481565b6000801b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156102b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ac906111d5565b60405180910390fd5b8181905084849050146102fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f4906111f5565b60405180910390fd5b61034984848484600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610828565b610388576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037f906111d5565b60405180910390fd5b6000600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060005b8585905081101561052b576104768285858481811061045c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020160208101906104719190610d74565b610848565b600160008888858181106104b3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020160208101906104c89190610be8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461051191906112e0565b92505081905550808061052390611423565b915050610414565b508573ffffffffffffffffffffffffffffffffffffffff167f9a14fb76ae6d133b646a7594e7ee7ee26624ca291606a83cab10d86c653e155c826040516105729190611215565b60405180910390a2505050505050565b6000620f424060646105949190611367565b82846105a09190611367565b6105aa9190611336565b905092915050565b34600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461060191906112e0565b9250508190555050565b6000801b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461068f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610686906111b5565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506107228282610870565b505050565b81819050848490501461076f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610766906111f5565b60405180910390fd5b600061077d858585856109f4565b905060008160601c905081600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550818173ffffffffffffffffffffffffffffffffffffffff167f7b2cd4844121a8a815695052fe5153b5bf62c3d6894f027241b2808ab77d127288888888604051610818949392919061115f565b60405180910390a3505050505050565b600080610837878787876109f4565b905082811491505095945050505050565b600060648263ffffffff168461085e9190611367565b6108689190611336565b905092915050565b600061087c8383610a84565b9050806109b35760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b1580156108eb57600080fd5b505af11580156108ff573d6000803e3d6000fd5b505050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b815260040161095f9291906110ff565b602060405180830381600087803b15801561097957600080fd5b505af115801561098d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b19190610d0f565b505b7fdbd5389f52533f4cbd998e752125a5a4eaa0b813b399ad15f775ec0e8438620d8383836040516109e693929190611128565b60405180910390a192915050565b6000808585604051602001610a0a92919061108c565b60405160208183030381529060405280519060200120905060008484604051602001610a379291906110a5565b6040516020818303038152906040528051906020012090508181604051602001610a629291906110be565b6040516020818303038152906040528051906020012092505050949350505050565b6000808373ffffffffffffffffffffffffffffffffffffffff168361753090604051610aaf906110ea565b600060405180830381858888f193505050503d8060008114610aed576040519150601f19603f3d011682016040523d82523d6000602084013e610af2565b606091505b505090508091505092915050565b600081359050610b0f81611578565b92915050565b60008083601f840112610b2757600080fd5b8235905067ffffffffffffffff811115610b4057600080fd5b602083019150836020820283011115610b5857600080fd5b9250929050565b60008083601f840112610b7157600080fd5b8235905067ffffffffffffffff811115610b8a57600080fd5b602083019150836020820283011115610ba257600080fd5b9250929050565b600081519050610bb88161158f565b92915050565b600081359050610bcd816115a6565b92915050565b600081359050610be2816115bd565b92915050565b600060208284031215610bfa57600080fd5b6000610c0884828501610b00565b91505092915050565b600080600080600060608688031215610c2957600080fd5b6000610c3788828901610b00565b955050602086013567ffffffffffffffff811115610c5457600080fd5b610c6088828901610b15565b9450945050604086013567ffffffffffffffff811115610c7f57600080fd5b610c8b88828901610b5f565b92509250509295509295909350565b60008060008060408587031215610cb057600080fd5b600085013567ffffffffffffffff811115610cca57600080fd5b610cd687828801610b15565b9450945050602085013567ffffffffffffffff811115610cf557600080fd5b610d0187828801610b5f565b925092505092959194509250565b600060208284031215610d2157600080fd5b6000610d2f84828501610ba9565b91505092915050565b60008060408385031215610d4b57600080fd5b6000610d5985828601610bbe565b9250506020610d6a85828601610bbe565b9150509250929050565b600060208284031215610d8657600080fd5b6000610d9484828501610bd3565b91505092915050565b6000610da98383610dfd565b60208301905092915050565b6000610dc18383610e1b565b60208301905092915050565b6000610dd9838361106e565b60208301905092915050565b6000610df1838361107d565b60208301905092915050565b610e06816113c1565b82525050565b610e15816113c1565b82525050565b610e24816113c1565b82525050565b6000610e36838561125e565b9350610e4182611230565b8060005b85811015610e7a57610e5782846112b2565b610e618882610d9d565b9750610e6c83611244565b925050600181019050610e45565b5085925050509392505050565b6000610e93838561126f565b9350610e9e82611230565b8060005b85811015610ed757610eb482846112b2565b610ebe8882610db5565b9750610ec983611244565b925050600181019050610ea2565b5085925050509392505050565b6000610ef0838561127a565b9350610efb8261123a565b8060005b85811015610f3457610f1182846112c9565b610f1b8882610dcd565b9750610f2683611251565b925050600181019050610eff565b5085925050509392505050565b6000610f4d838561128b565b9350610f588261123a565b8060005b85811015610f9157610f6e82846112c9565b610f788882610de5565b9750610f8383611251565b925050600181019050610f5c565b5085925050509392505050565b610fa7816113d3565b82525050565b610fb6816113df565b82525050565b610fcd610fc8826113df565b61146c565b82525050565b6000610fe06018836112a1565b9150610feb826114d4565b602082019050919050565b6000611003600d836112a1565b915061100e826114fd565b602082019050919050565b6000611026600083611296565b915061103182611526565b600082019050919050565b6000611049602f836112a1565b915061105482611529565b604082019050919050565b61106881611409565b82525050565b61107781611413565b82525050565b61108681611413565b82525050565b6000611099828486610e87565b91508190509392505050565b60006110b2828486610f41565b91508190509392505050565b60006110ca8285610fbc565b6020820191506110da8284610fbc565b6020820191508190509392505050565b60006110f582611019565b9150819050919050565b60006040820190506111146000830185610e0c565b611121602083018461105f565b9392505050565b600060608201905061113d6000830186610e0c565b61114a602083018561105f565b6111576040830184610f9e565b949350505050565b6000604082019050818103600083015261117a818688610e2a565b9050818103602083015261118f818486610ee4565b905095945050505050565b60006020820190506111af6000830184610fad565b92915050565b600060208201905081810360008301526111ce81610fd3565b9050919050565b600060208201905081810360008301526111ee81610ff6565b9050919050565b6000602082019050818103600083015261120e8161103c565b9050919050565b600060208201905061122a600083018461105f565b92915050565b6000819050919050565b6000819050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b60006112c16020840184610b00565b905092915050565b60006112d86020840184610bd3565b905092915050565b60006112eb82611409565b91506112f683611409565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561132b5761132a611476565b5b828201905092915050565b600061134182611409565b915061134c83611409565b92508261135c5761135b6114a5565b5b828204905092915050565b600061137282611409565b915061137d83611409565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156113b6576113b5611476565b5b828202905092915050565b60006113cc826113e9565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600061142e82611409565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561146157611460611476565b5b600182019050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f53706c6974732063616e6e6f7420626520636c61696d65640000000000000000600082015250565b7f496e76616c69642073706c697400000000000000000000000000000000000000600082015250565b50565b7f4d69736d617463686564206163636f756e7473202620616c6c6f636174696f6e60008201527f73206172726179206c656e677468730000000000000000000000000000000000602082015250565b611581816113c1565b811461158c57600080fd5b50565b611598816113d3565b81146115a357600080fd5b50565b6115af81611409565b81146115ba57600080fd5b50565b6115c681611413565b81146115d157600080fd5b5056fea2646970667358221220de1deed53a6bbf19e653cdb367346909a02cc9a736b6abe288c7c0c1b32e616364736f6c63430008040033'

export class SplitMain__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer)
  }

  deploy(
    wethAddress_: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<SplitMain> {
    return super.deploy(wethAddress_, overrides || {}) as Promise<SplitMain>
  }
  getDeployTransaction(
    wethAddress_: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(wethAddress_, overrides || {})
  }
  attach(address: string): SplitMain {
    return super.attach(address) as SplitMain
  }
  connect(signer: Signer): SplitMain__factory {
    return super.connect(signer) as SplitMain__factory
  }
  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): SplitMainInterface {
    return new utils.Interface(_abi) as SplitMainInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): SplitMain {
    return new Contract(address, _abi, signerOrProvider) as SplitMain
  }
}
